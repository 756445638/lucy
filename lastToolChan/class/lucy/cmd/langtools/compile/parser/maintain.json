{
	"compileTime":1545354356,
	"compiledFrom":[
		{
			"lastModify":1545111447,
			"name":"block.lucy"
		},
		{
			"lastModify":1545354281,
			"name":"class.lucy"
		},
		{
			"lastModify":1545118606,
			"name":"comment.lucy"
		},
		{
			"lastModify":1545280140,
			"name":"enum.lucy"
		},
		{
			"lastModify":1545278748,
			"name":"expression.lucy"
		},
		{
			"lastModify":1545278760,
			"name":"expression_array.lucy"
		},
		{
			"lastModify":1545109576,
			"name":"expression_binary.lucy"
		},
		{
			"lastModify":1545109594,
			"name":"expression_question.lucy"
		},
		{
			"lastModify":1545278778,
			"name":"expression_suffix.lucy"
		},
		{
			"lastModify":1545280329,
			"name":"function.lucy"
		},
		{
			"lastModify":1545352986,
			"name":"parse.lucy"
		},
		{
			"lastModify":1545280052,
			"name":"parser_extends.lucy"
		},
		{
			"lastModify":1545269609,
			"name":"statamtent_for.lucy"
		},
		{
			"lastModify":1545269793,
			"name":"statement_if.lucy"
		},
		{
			"lastModify":1545109514,
			"name":"statement_switch.lucy"
		},
		{
			"lastModify":1545278864,
			"name":"statement_when.lucy"
		},
		{
			"lastModify":1545112840,
			"name":"type.lucy"
		},
		{
			"lastModify":1545109315,
			"name":"var.lucy"
		}
	],
	"imports":[
		{
			"name":"lucy/cmd/langtools/compile/ast",
			"linkTime":1545354355
		},
		{
			"name":"lucy/cmd/langtools/compile/lex",
			"linkTime":1545354356
		},
		{
			"name":"lucy/cmd/langtools/compile/jvm/cg",
			"linkTime":1545354354
		}
	],
	"hasMain":false,
	"classes":[
		"BlockParser.class",
		"ClassParser.class",
		"closureFunction$isPublic.class",
		"closureFunction$resetPrefix.class",
		"closureFunction$resetProperty$1.class",
		"closureFunction$resetProperty.class",
		"CommentParser.class",
		"EnumParser.class",
		"ExpressionArrayParser.class",
		"ExpressionBinaryParser.class",
		"ExpressionParser.class",
		"ExpressionQuestionParser.class",
		"ExpressionSuffix.class",
		"FunctionParser.class",
		"main.class",
		"Parser.class",
		"ParserExtends.class",
		"StatementForParser.class",
		"StatementIfParser.class",
		"StatementSwitchParser.class",
		"StatementWhenParser.class",
		"TypeParser.class"
	]
}