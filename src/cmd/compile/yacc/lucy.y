%{

package yacc

import (
	"fmt"
	"math/big"
    "github.com/756445638/lucy/src/cmd/compile/ast"
)

%}


%token TOKEN_FUNCTION   TOKEN_CONST    TOKEN_IF      TOKEN_ELSEIF    TOKEN_ELSE   TOKEN_FOR     TOKEN_BREAK
    	TOKEN_CONTINUE TOKEN_RETURN TOKEN_NULL  TOKEN_LP TOKEN_RP TOKEN_LC TOKEN_RC TOKEN_LB TOKEN_RB
    	TOKEN_SEMICOLON TOKEN_COMMA TOKEN_LOGICAL_AND TOKEN_LOGICAL_OR TOKEN_AND TOKEN_OR TOKEN_ASSIGN
    	TOKEN_EQUAL TOKEN_NE TOKEN_GT TOKEN_GE TOKEN_LT TOKEN_LE TOKEN_ADD TOKEN_SUB TOKEN_MUL
    	TOKEN_DIV TOKEN_MOD TOKEN_INCREMENT TOKEN_DECREMENT TOKEN_DOT TOKEN_VAR TOKEN_NEW TOKEN_COLON
    	TOKEN_PLUS_ASSIGN TOKEN_MINUS_ASSIGN TOKEN_MUL_ASSIGN TOKEN_DIV_ASSIGN TOKEN_MOD_ASSIGN TOKEN_NOT
    	TOKEN_SWITCH TOKEN_CASE TOKEN_DEFAULT TOKEN_PACKAGE TOKEN_CLASS TOKEN_PUBLIC
    	TOKEN_PROTECTED TOKEN_PRIVATE TOKEN_BOOL TOKEN_BYTE TOKEN_INT TOKEN_FLOAT TOKEN_STRING
    	TOKEN_IDENTIFIER TOKEN_LITERAL_INT TOKEN_LITERAL_STRING TOKEN_LITERAL_FLOAT TOKEN_IMPORT TOKEN_COLON_ASSIGN

%token <expression> TOKEN_BOOL TOKEN_IDENTIFIER TOKEN_LITERAL_INT TOKEN_LITERAL_STRING TOKEN_LITERAL_FLOAT


%union {
    expression *ast.Expression
}


%%


top:






%%