
import "lucy/encoding/json"

public class PackageMeta {
	public compiledFrom FileMeta[]
	public imports      string[]
	public compileTime  long
	public classes      string[]
}


public class FileMeta {
	public lastModify long
	public name string 
}

fn main(args []string) {
	var bs = []byte(`
		{
	"compiledFrom": [
		{
			"lastModify": 1539671987,
			"name": "error.lucy"
		},
		{
			"lastModify": 1542611477,
			"name": "lang.lucy"
		},
		{
			"lastModify": 1542588953,
			"name": "run.lucy"
		}
	],
	"imports": null,
	"compileTime": 1543198172,
	"classes": [
		"Lucy.class",
		"Run.class",
		"main.class"
	]
}
	`)

	m := new PackageMeta()
	_,err := json.decode(bs , m  )
	if err != null {
		panic(err)
	}

	print(m.compileTime)
	for v := range m.compiledFrom {
		assert(v != null)
		print(v.name , v.lastModify)
	}
	for v := range m.imports{
		print(v)
	}
	for v := range m.classes{
		print(v)
	}

	
	
	
}


























