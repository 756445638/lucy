

fn testByte()->(ok bool = true){
	var a ,b byte
	a = 1b
	b = 2b
	if 3 != a + b {
		ok = false
		return 
	}
	if -1 != a - b {
		ok = false
		return 
	}
	if 1 != b - a {
		ok = false
		return 
	}
	if 2 != b * a {
		ok = false
		return 
	}
	if 2 != b / a {
		ok = false
		return 
	}
	if 0 != a / b {
		ok = false
		return 
	}
	if 0 != b % a {
		ok = false
		return 
	}
	if 1 != a % b {
		ok = false
		return 
	}
}


fn testShort()->(ok bool = true){
	var a ,b short
	a = 1s
	b = 2s
	if 3 != a + b {
		ok = false
		return 
	}
	if -1 != a - b {
		ok = false
		return 
	}
	if 1 != b - a {
		ok = false
		return 
	}
	if 2 != b * a {
		ok = false
		return 
	}
	if 2 != b / a {
		ok = false
		return 
	}
	if 0 != a / b {
		ok = false
		return 
	}
	if 0 != b % a {
		ok = false
		return 
	}
	if 1 != a % b {
		ok = false
		return 
	}
}


fn testInt()->(ok bool = true){
	var a ,b int
	a = 1
	b = 2
	if 3 != a + b {
		ok = false
		return 
	}
	if -1 != a - b {
		ok = false
		return 
	}
	if 1 != b - a {
		ok = false
		return 
	}
	if 2 != b * a {
		ok = false
		return 
	}
	if 2 != b / a {
		ok = false
		return 
	}
	if 0 != a / b {
		ok = false
		return 
	}
	if 0 != b % a {
		ok = false
		return 
	}
	if 1 != a % b {
		ok = false
		return 
	}
}


fn testLong()->(ok bool = true){
	var a ,b long
	a = 1
	b = 2
	if 3 != a + b {
		ok = false
		return 
	}
	if -1 != a - b {
		ok = false
		return 
	}
	if 1 != b - a {
		ok = false
		return 
	}
	if 2 != b * a {
		ok = false
		return 
	}
	if 2 != b / a {
		ok = false
		return 
	}
	if 0 != a / b {
		ok = false
		return 
	}
	if 0 != b % a {
		ok = false
		return 
	}
	if 1 != a % b {
		ok = false
		return 
	}
}



fn testIntegers(){
	if false == testByte() {
		panic(new error("test byte failed"))
	}
    if false == testShort() {
		panic(new error("test short failed"))
	}
	if false == testInt() {
		panic(new error("test int failed"))
	}
    if false == testLong() {
		panic(new error("test  failed"))
	}
}



















