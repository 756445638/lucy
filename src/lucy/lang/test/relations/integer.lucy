// all rights reserved , check the LICENSE file



fn testByte()->(ok bool = false){
	var a ,b byte
	a = 2b
	b = 1b
	if true != a > b {
		return 
	}
	if true != a >= b {
		return 
	}
	if false !=  a < b {
		return 
	}
	if false != a <= b  {
		return 
	}
	if false != (a == b)  {
		return 
	}
	if  true != (a != b)   {
		return 
	}
	ok = true 
}


fn testShort()->(ok bool = false){
	var a ,b short
	a = 2s
	b = 1s
	if true != a > b {
		return 
	}
	if true != a >= b {
		return 
	}
	if false !=  a < b {
		return 
	}
	if false != a <= b  {
		return 
	}
	if false != (a == b)  {
		return 
	}
	if  true != (a != b)   {
		return 
	}
	ok = true 
}


fn testInt()->(ok bool = false){
	var a ,b int
	a = 2
	b = 1
	if true != a > b {
		return 
	}
	if true != a >= b {
		return 
	}
	if false !=  a < b {
		return 
	}
	if false != a <= b  {
		return 
	}
	if false != (a == b)  {
		return 
	}
	if  true != (a != b)   {
		return 
	}
	ok = true 
}



fn testLong()->(ok bool = false){
	var a ,b long
	a = 2L
	b = 1L
	if true != a > b {
		return 
	}
	if true != a >= b {
		return 
	}
	if false !=  a < b {
		return 
	}
	if false != a <= b  {
		return 
	}
	if false != (a == b)  {
		return 
	}
	if  true != (a != b)   {
		return 
	}
	ok = true 
}



fn testIntegers(){
	if false == testByte() {
		panic(new error("test byte failed"))
	}
    if false == testShort() {
		panic(new error("test short failed"))
	}
	if false == testInt() {
		panic(new error("test int failed"))
	}
    if false == testLong() {
		panic(new error("test  failed"))
	}
}



















