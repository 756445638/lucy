
import "lucy/cmd/langtools/compile/ast"


var	ArrayMetas                = new map{ast.VariableTypeKind -> ArrayMeta}()
var	closure                  = new Closure()


enum  LeftValueKind {
	LeftValueKindLucyArray = 1,
	LeftValueKindMap,
	LeftValueKindLocalVar,
	LeftValueKindPutStatic,
	LeftValueKindPutField,
	LeftValueKindArray
}


const	methodHandleInvokeMethodName = "invoke"
const	specialMethodInit            = "<init>"
const	javaRootObjectArray          = "[Ljava/lang/Object;"
const	javaStringClass              = "java/lang/String"
const	javaExceptionClass           = "java/lang/Exception"
const	javaMethodHandleClass        = "java/lang/invoke/MethodHandle"
const	javaRootClass                = "java/lang/Object"
const	javaIntegerClass             = "java/lang/Integer"
const	javaFloatClass               = "java/lang/Float"
const	javaDoubleClass              = "java/lang/Double"
const	javaLongClass                = "java/lang/Long"
const	throwableClass               = "java/lang/Throwable"
const	javaPrintStreamClass         = "java/io/PrintStream"
const	mapClass                     = "java/util/concurrent/ConcurrentHashMap"


var typeInt = new  ast.Type()
var typeString = new  ast.Type()
var typeBool  = new ast.Type()

{
    typeInt.Type = ast.VariableTypeInt
    typeString.Type = ast.VariableTypeString
    typeBool.Type = ast.VariableTypeBool
}

