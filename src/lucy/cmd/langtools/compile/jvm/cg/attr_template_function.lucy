
import "lucy/binary"

public class AttributeTemplateFunction {
	name string
	/*
		reGenerate pos
	*/
	public filename    string
	public startLine   char
	public startColumn char
	public code        string
	public accessFlags  char
	public comment     string
	public fn fromBytes(c Class, bs []byte) {
		this.name = string(c.ConstPool[binary.BigEndian.getChar(bs)].Info)
		this.filename = string(c.ConstPool[binary.BigEndian.getChar(bs[2:])].Info)
		this.startLine = binary.BigEndian.getChar(bs[4:])
		this.startColumn = binary.BigEndian.getChar(bs[6:])
		this.code = string(c.ConstPool[binary.BigEndian.getChar(bs[8:])].Info)
		this.accessFlags = binary.BigEndian.getChar(bs[10:])
	}
	
	fn ToAttributeInfo(c Class) -> (ret AttributeInfo) {
		info := new AttributeInfo()
		info.nameIndex = c.InsertUtf8Const(AttributeNameLucyTemplateFunction)
		info.attributeLength = 14
		info.Info = new []byte(info.attributeLength)
		binary.BigEndian.putChar(info.Info, c.InsertUtf8Const(this.name))
		binary.BigEndian.putChar(info.Info[2:], c.InsertUtf8Const(this.filename))
		binary.BigEndian.putChar(info.Info[4:], this.startLine)
		binary.BigEndian.putChar(info.Info[6:], this.startColumn)
		binary.BigEndian.putChar(info.Info[8:], c.InsertUtf8Const(this.code))
		binary.BigEndian.putChar(info.Info[10:], this.accessFlags)
		binary.BigEndian.putChar(info.Info[12:], c.InsertUtf8Const(this.comment))
		return info
	}	
}


