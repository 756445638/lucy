package cg

import "encoding/binary"

class AttributeLucyTypeAlias {
	Alias   string
	Comment string
	fn FromBs(class *Class, bs []byte) {
		this.Alias = string(class.ConstPool[binary.BigEndian.Uint16(bs)].Info)
		this.Comment = string(class.ConstPool[binary.BigEndian.Uint16(bs[2:])].Info)
	}

	fn ToAttributeInfo(class *Class) -> (ret AttributeInfo)  {
		ret := new AttributeInfo()
		ret.NameIndex = class.InsertUtf8Const(AttributeNameLucyTypeAlias)
		ret.Info = make([]byte, 4)
		ret.attributeLength = uint32(len(ret.Info))
		binary.BigEndian.PutUint16(ret.Info, class.InsertUtf8Const(this.Alias))
		binary.BigEndian.PutUint16(ret.Info[2:], class.InsertUtf8Const(this.Comment))
		return ret
	}
}


