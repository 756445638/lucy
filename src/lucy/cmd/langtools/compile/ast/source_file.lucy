

//different from different source file
class SourceFile {
	imports            map { string -> Import }  // accessName -> Import
	importsByResources map { string -> Import }  // resourceName -> Import
	filename          string  
	/*
		rename will modify this file 
	*/
	isDirty bool 
	
	fn SourceFile(filename string) {
		this.super()
		this.filename = filename
	}

	fn insertImport(block Block,i Import) ->(err error)  {
		if i.locateDefinition {
			block.inheritedAttribute.p.setLocationDefinition(i)
			return
		}
		if this.imports == null {
			this.imports = new map {string->Import}()
		}
		if this.importsByResources == null {
			this.importsByResources =new map { string -> Import }()
		}
		if err = i.mkAccessName(); err != null {
			return err
		}
		if this.imports.keyExist(i.accessName){
			return new error(sprintf("%s '%s' reimported",
				i.pos.errMsgPrefix(), i.Import))
		}
		if this.importsByResources.keyExist(i.Import) {
			return new error(sprintf("%s '%s' reimported",
				i.pos.errMsgPrefix(), i.accessName))
		}
		this.importsByResources[i.Import] = i
		this.imports[i.accessName] = i
		return null
	}
}