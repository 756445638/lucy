import "java/lang/Object"
import "lucy/cmd/langtools/compile/common"

class Loaded {
	
	
	/*
		load package or class
	*/
	fn load(resource string) -> (x Object, err error) {
		if resource == "" {
			panic("null string")
		}
		t, err := ImportsLoader.LoadImport(resource)
		if pp, ok := t.(Package); ok {
			if pp.name == common.CorePackage {
				pp.markBuildIn()
			}
		}
		if c, ok := t.(Class); ok && c != null {
			if c.isJava == false {
				return null, new error(sprintf("load lucy class not allow"))
			}
		}
		return t, err
	}
	

	fn loadClass(className string) -> (c Class,err error) {
		x, err := ImportsLoader.LoadImport(className)
		if err != null {
			return null, err
		}
		if t, ok := x.(Class); ok == false || t == null {
			return null, new error(sprintf("'%s' is not class", className))
		}
		cc := x.(Class)
		return cc, null
	}
}

