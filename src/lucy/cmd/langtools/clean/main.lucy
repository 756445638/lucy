import "lucy/cmd/langtools/common"
import "lucy/os" as os  //TODO :: same name no need 
import "lucy/os/flag"

flagParser := new flag.FlagParser()
recursive := flagParser.boolOption("-r" , false , "clean sub directory too")


fn printUsageAndExit(code int){
	print("Usage: clean compiled class files ")
	print(flagParser.helpMsg())
	os.exit(code)
}


fn main(args []string){
	packageName ,err := flagParser.parse(args)
	if err != null {
		printf("parse command line failed,err:%s\n" , err.toString())
		os.exit(2)
		return 
	}
	if len(packageName) == 0 {
		printUsageAndExit(1)
	}
	lucyRoot,err := common.getLucyRoot()
	if err != null {
		print(err)
		return 
	}
	lucyPaths ,err := common.getLucyPath()
	if err != null {
		print(err)
		return 
	}
	c := new Clean(
		lucyRoot ,
		lucyPaths ,  
		packageName[0] , 
		recursive.getValue()
	)
	c.clean()
}
















