// all rights reserved , check the LICENSE file

import "lucy/os/flag"

class Flags {
    parser       flag.FlagParser
    outputFile   flag.StringOption
    manifestFile flag.StringOption
    verbose      flag.BoolOption

    fn Flags() {
        this.super()
        this.parser = new flag.FlagParser()
        this.outputFile = this.parser.stringOption("-o")
        this.manifestFile = this.parser.stringOption("-manifest")
        this.verbose = this.parser.boolOption("-v")
    }

    fn parseArgs(args []string) -> (
        packageName string,
        outputFile string,
        manifestFile string,
        verbose bool) {
        noUse , err := this.parser.parse(args)
        if err != null {
            panic(err)
        }
        if len(noUse) == 0 {
            print("no package name specified")
            printUsageAndExit(1)
        }
        packageName = noUse[0]
        noUse = noUse[1:]
        if len(noUse) > 0 {
            panic("flag defined but not used:" + noUse)
            printUsageAndExit(1)
        }
        outputFile = this.outputFile.getValue()
        if outputFile == "" {
            print("-o output file is null string")
            printUsageAndExit(1)
        }
        if outputFile.endsWith(".jar") == false {
            panic("-o output file should end with .jar")
        } 
        manifestFile = this.manifestFile.getValue()
        verbose = this.verbose.getValue()
    }
}


