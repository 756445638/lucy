import "lucy/cmd/langtools/compile/ast"
import "java/lang/Object"

class MakeHover {
    from Object
    
    fn MakeHover(from Object) {
        this.super()
        this.from = from 
    }

    fn make() -> (s string){
        when this.from.(type){
        case ast.Enum:
            s = this.from.(ast.Enum).mkDescription()
        case ast.Class:
            s = this.from.(ast.Class).mkDescription()
        case ast.ClassField:
            s = this.from.(ast.ClassField).mkDescription()
        case ast.Function:
            s = this.from.(ast.Function).mkDescription()
        case ast.ClassMethod:
            s = this.from.(ast.ClassMethod).mkDescription()
        default:
            s = sprintf("'%s' un handled" , this.from.getClass().toString())
        }
    }
}