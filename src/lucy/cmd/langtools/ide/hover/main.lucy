import "lucy/cmd/langtools/ide/gotodefinition"
import "lucy/cmd/langtools/compile/ast"
import "lucy/os"

public fn getHover (file string , pos int , bs []byte) ->(s string = "") {
    if len(bs) == 0 {
        // read the file 
        t,_ := os.readFile(file)
        bs = javaArray2Lucy(t)
    }
    storePackage := []ast.Package{null}
    gotodefinition.findDefinition(file , pos , bs , storePackage)
    if storePackage[0] == null || 
        storePackage[0].locateDefinitionBaseOn == null {
        return 
    }
    return new MakeHover(storePackage[0].locateDefinitionBaseOn).make()
}


fn main(args []string) {
	file , bufferFile , pos := new Flags().parseArgs(args)
    var bs []byte 
    if bufferFile != null && bufferFile != "" {
        t , err := os.readFile(bufferFile)
        if null != err {
            panic(err)
        }
        bs = javaArray2Lucy(t)
    }
    print(getHover(file , pos , bs))
}