
import "lucy/cmd/langtools/ide"
import "lucy/cmd/langtools/ide/gotodefinition"
import "java/nio/file/FileSystems"
import "lucy/cmd/langtools/common"

public fn rename( file string, to string, pos int) {
    definition := gotodefinition.findDefinition(file ,pos , null,null)
    if definition == null {
        return 
    }
    lucyPath , packageName := ide.locateLucyFile(definition.filename)
    var lucyFiles = ide.readLucyFiles(ide.getLucyFiles(lucyPath + "/src/" + packageName))    
    fileSystem := FileSystems.getDefault()
    for v := range lucyFiles {
        if fileSystem.getPath(definition.filename).getFileName().toString() == 
            fileSystem.getPath(v.realPathName).getFileName().toString(){
            v.rename = definition.offset 
        }
    }
    new ReName(lucyFiles , packageName , true ,common.getClassPath(), common.getLucyPath() , to ).rename()
}

fn main(args []string) {
    // f := new Flags()
    // file , to , pos := f.parseArgs(args)
    // rename(file, to , pos)
}
