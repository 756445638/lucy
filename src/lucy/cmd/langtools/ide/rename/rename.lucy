import "lucy/cmd/langtools/compile/ast"
import "java/lang/Object"

typealias filename = string


class ReName {
    usages ast.Usage[]
    on     Object     
    to     string     

    public fn ReName(usages ast.Usage[] , on Object , to string) {
        this.super()
        this.usages = usages
        this.on = on
        this.to = to
    }

    fn rename() {
        if t , ok := this.on.(ast.ClassMethod) ; ok == true && t.Function.name == ast.SpecialMethodInit {
            // init method cannot be renamed
            return
        }
        grouyByFileName := new map{string -> []ast.Usage}()
        for _ , v := range this.usages {
            if grouyByFileName.keyExist(v.pos.filename) {
                grouyByFileName[v.pos.filename].append(v)
            } else {
                grouyByFileName[v.pos.filename] = [v]
            }

        }

        if t , ok := this.on.(ast.Import) ; ok == true {
            // init method cannot be renamed
            this.renameImport(grouyByFileName , t)
            return
        }
    }

    fn getUsageGroupByLine(usages []ast.Usage) -> (ret map{int -> []ast.Usage} = new map{int -> []ast.Usage}()) {
        for v := range usages {
            if ret.keyExist(v.pos.startLine) {
                ret[v.pos.startLine].append(v)
            } else {
                ret[v.pos.startLine] = [v]
            }

        }

    }

    fn renameImport(grouyByFileName map{string -> []ast.Usage} , i ast.Import){}

}


