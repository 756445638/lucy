import "lucy/cmd/langtools/compile/parser"
import "lucy/cmd/langtools/ide/utils"
import "java/io"
import "java/nio/file/FileSystems"
import "lucy/encoding/json"
import "lucy/cmd/langtools/compile/ast"


public fn findDefinition(file string , pos int) -> (result ast.Pos) {
    lucyPath , packageName := utils.locateLucyFile(file)
    var lucyFiles []utils.LucyFile 
    {
        t := []string{}
        p := lucyPath + "/src/" + packageName
        for v := range new io.File(p).list() {
            if v.endsWith(".lucy") {
                t.append(p + "/" + v)
            }
        }
        lucyFiles = utils.readLucyFiles(t)
    }
    fileSystem := FileSystems.getDefault()
    for v := range lucyFiles {
        if fileSystem.getPath(file).getFileName().toString() == 
            fileSystem.getPath(v.realPathName).getFileName().toString(){
            v.locateDefinition = pos 
        }
    }
    result = new FindDefinition(lucyFiles,packageName , true ).find()
}

