
import "lucy/cmd/langtools/ide"
import "java/io"
import "java/nio/file/FileSystems"
import "lucy/cmd/langtools/compile/ast"
import "lucy/os"

public fn findDefinition(file string ,bufferFile string , pos int , bs []byte) -> (result ast.Pos) {
    lucyPath , packageName := ide.locateLucyFile(file)
    var lucyFiles []ide.LucyFile 
    {
        t := []string{}
        p := lucyPath + "/src/" + packageName
        for v := range new io.File(p).list() {
            if v.endsWith(".lucy") {
                t.append(p + "/" + v)
            }
        }
        lucyFiles = ide.readLucyFiles(t)
    }
    fileSystem := FileSystems.getDefault()
    searchFile := ""
    for v := range lucyFiles {
        if fileSystem.getPath(file).getFileName().toString() == 
            fileSystem.getPath(v.realPathName).getFileName().toString(){
            if len(bs) > 0 {
                v.bs = bs 
            }else if bufferFile != null && bufferFile != "" {
                t , err := os.readFile(bufferFile)
                if err != null {
                    panic(err)
                }
                v.realPathName = bufferFile
                v.bs = javaArray2Lucy(t)
            }
            v.locateDefinition = pos 
            searchFile = v.realPathName
        }
    }
    result = new FindDefinition(lucyFiles,packageName , true , searchFile , pos >> 16).find()
}
