import "lucy/cmd/langtools/ide"
import "lucy/cmd/langtools/compile/ast"
import "lucy/os"



class FindDefinition {
    lucyFiles []ide.LucyFile 
    packageName string
    printErr bool 
    searchFile string 
    fn FindDefinition(lucyFiles []ide.LucyFile , 
        packageName string , printErr bool ,searchFile string  , matchLine  int ){
        this.super()
        this.lucyFiles = lucyFiles
        this.packageName = packageName
        this.printErr = printErr 
        this.searchFile = searchFile
    }
    
    fn find() -> (result ast.Pos){
        //parse ast and typecheck
        p , es := ide.parseAstAndTypeCheck(this.packageName , this.lucyFiles , false , this.searchFile)
        if this.printErr {
            for v := range es{
                os.stderr.println(v.getMessage())
            }
        }
        if p.locateDefinition != null {
            if p.locateDefinition.loadDefinitionFromOutside != null {
                return this.loadDefinitionFromOutside(p.locateDefinition.loadDefinitionFromOutside)
            }
            return p.locateDefinition
        }
        
    }
    
    fn loadDefinitionFromOutside(out ast.LoadDefinitionFromOutside) -> (result ast.Pos) {
        // primary load definition from class file
    }
    
}







