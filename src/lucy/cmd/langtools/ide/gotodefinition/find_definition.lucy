import "lucy/cmd/langtools/ide"
import "lucy/cmd/langtools/compile/ast"
import "lucy/os"



class FindDefinition {
    lucyFiles []ide.LucyFile 
    packageName string
    printErr bool 
    fn FindDefinition(lucyFiles []ide.LucyFile , packageName string , printErr bool ){
        this.super()
        this.lucyFiles = lucyFiles
        this.packageName = packageName
        this.printErr = printErr 
    }
    
    fn find() -> (result ast.Pos){
        //parse ast and typecheck
        p , es := ide.parseAstAndTypeCheck(this.packageName , this.lucyFiles)
        if this.printErr{
            for v := range es{
                os.stderr.println(v.getMessage())
            }
        }
        if p.locateDefinition != null {
            if p.locateDefinition.loadDefinitionFromOutside != null {
                return this.loadDefinitionFromOutside(p.locateDefinition.loadDefinitionFromOutside)
            }
            return p.locateDefinition
        }
    }
    
    fn loadDefinitionFromOutside(out ast.LoadDefinitionFromOutside) -> (result ast.Pos) {
        
    }

}







