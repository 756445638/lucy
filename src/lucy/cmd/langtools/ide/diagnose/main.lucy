
import "lucy/cmd/langtools/ide"
import "lucy/cmd/langtools/common"
import "java/nio/file/FileSystems"

public fn diagnose(filename string , bs []byte) ->(result map{string -> Error[]}) {
    lucypath , packageName := ide.locateLucyFile(filename)
    lucyFiles := ide.readLucyFiles(ide.getLucyFiles(lucypath + "/src/" + packageName))
    if len(bs) > 0 {
        fileSystem := FileSystems.getDefault()
        file := fileSystem.getPath(filename).getFileName().toString()
        for v := range lucyFiles {
           if file ==  fileSystem.getPath(v.realPathName).getFileName().toString(){
               v.bs = bs 
           }
        }
    }
    loader := new ide.PackageLoader(common.getLucyPath() , common.getClassPath())
    loader.onlyAnalyzeGlobals = true 
    _ , es := ide.parseAstAndTypeCheck(packageName , lucyFiles , false , "" , -1 , loader)
    if es == null {
        es = loader.errors
    }else {
        es.appendAll(loader.errors)
    }
    return Error.convertErrors(es)
}

fn main(args []string) {
    
}