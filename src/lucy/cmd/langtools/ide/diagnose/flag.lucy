import "lucy/os/flag"

class Flags {
    file       flag.StringOption
    parser     flag.FlagParser  
    bufferFile flag.StringOption

    fn Flags() {
        this.super()
        this.parser = new flag.FlagParser()
        this.file = this.parser.stringOption("-file")
        this.bufferFile = this.parser.stringOption("-buffer-file")
    }

    fn parseArgs(args []string) -> (file string , bufferFile string) {
        nodefine , err := this.parser.parse(args)
        if err != null {
            panic(err)
        }
        if len(nodefine) > 0 {
            print("args provides but not used:" + nodefine)
            printUsageAndExit(1)
        }
        if this.file.getValue() == "" {
            print("file not provided")
            printUsageAndExit(1)
        }
        file = this.file.getValue()
        bufferFile = this.bufferFile.getValue()
    }
}


