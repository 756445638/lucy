import "lucy/cmd/langtools/compile/ast"
import "lucy/cmd/langtools/ide"
import "lucy/os"
import "java/io"

class FindUsage {
    lucyFiles []ide.LucyFile
    packageName string
    printErr bool
    lucyPath []string
    
    fn FindUsage(lucyFiles []ide.LucyFile , packageName string , printErr bool , lucyPath []string ) {
        this.super()
        this.lucyFiles = lucyFiles
        this.packageName = packageName
        this.printErr = printErr
        this.lucyPath = lucyPath
    }
    
    fn find() -> (result []ast.Usage){
        p , es := ide.parseAstAndTypeCheck(this.packageName , this.lucyFiles ,false )
        if this.printErr{
            for v := range es{
                os.stderr.println(v.getMessage())
            }
        }
        /* 
            set this package to cache 
            when another trying to load this pacakge could use the cache and the "findUsage" has created in memory
        */
        ide.packageLoader.setCache(this.packageName , p)
        if p.findUsageIsGlobal {
            this.searchLucyPath()        
        }
        return p.findUsage 
    }
    
    fn searchLucyPath() {
        for _,v := range this.lucyPath {
            this.searchDir("" , v + "/src/")
        }
    }
    
    fn searchDir(packageName string , dir string ) {
        list := (new io.File(dir)).list()
        containsLucyFile := false 
        for v := range list {
            if subDir := dir + "/" + v ; new io.File(subDir).isDirectory() {
                this.searchDir(packageName + "/" + v , subDir)
                continue
            }
            if v.endsWith(".lucy") {
                containsLucyFile = true
            }
        }
        if containsLucyFile == false {
            // no lucy files
            return 
        }
        if ide.packageLoader.getCache(packageName) != null {
            //handled 
            // when handle subdirectory may 
            return 
        }
        lucyFiles := ide.readLucyFiles(ide.getLucyFiles(dir))
        imported := false 
        for v := range ide.parseImports(lucyFiles) {
            if v == this.packageName {
                imported = true 
                break 
            }
        }
        if imported == false {
            return 
        }
        _ , es := ide.parseAstAndTypeCheck(packageName , lucyFiles,false )
        if this.printErr{
            for v := range es{
                os.stderr.println(v.getMessage())
            }
        }
    }
}


