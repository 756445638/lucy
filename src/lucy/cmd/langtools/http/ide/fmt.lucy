import "lucy/cmd/langtools/ide" as ideLib 
import "lucy/cmd/langtools/compile/parser"  
import "lucy/cmd/langtools/compile/ast"  
import "com/sun/net/httpserver/HttpHandler"
import "com/sun/net/httpserver/HttpExchange"
import "lucy/cmd/langtools/http/g"


class Fmt implements HttpHandler {
    public fn handle(exchange HttpExchange) {
        os := exchange.getResponseBody()
        defer {
            exchange.close()
            e := catch()
            if e != null {
                exchange.sendResponseHeaders(500 , 0L)
                os.write(byte[]("internal error"))
                e.printStackTrace()
            }
        }
        bs := g.readBodyBytes(exchange.getRequestBody())
        if len(bs) == 0 {
            bs := byte[]("zero length bs")
            exchange.sendResponseHeaders(400 , long(len(bs)))
            os.write(bs)
            return
        }
        var tops = new []ast.TopNode(0)
        es := parser.Parse(tops , "" , bs , false , 10 , -1 , -1 , -1 , -1 , -1)
        if len(es) > 0 {
            errmsg := ""
            for v := range es {
                errmsg += v.getMessage() + "\n"
            }
            bs := byte[](errmsg)
            exchange.sendResponseHeaders(400 , long(len(bs)))
            os.write(bs)
            return
        }
        {
            formator := new ideLib.Fmt()
            s := formator.fmt(tops)
            bs := byte[](s)
            exchange.sendResponseHeaders(200 , long(len(bs)))
            os.write(bs)
        }
    } 
}
