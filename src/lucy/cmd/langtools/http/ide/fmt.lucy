import "lucy/cmd/langtools/ide" as ideLib
import "lucy/cmd/langtools/compile/parser"
import "lucy/cmd/langtools/compile/ast"
import "com/sun/net/httpserver/HttpHandler"
import "com/sun/net/httpserver/HttpExchange"
import "lucy/cmd/langtools/http/g"
import "java/lang/System"
import "lucy/os" as lucyos

class Fmt implements HttpHandler {
    public fn handle(exchange HttpExchange) {
        os := exchange.getResponseBody()
        now := System.currentTimeMillis()
        defer {
            CallStatus.collect(callStatus , "fmt" , System.currentTimeMillis() - now)
            e := catch()
            if e != null {
                exchange.sendResponseHeaders(500 , 0L)
                os.write(byte[]("internal error"))
                e.printStackTrace()
            }
            exchange.close()
        }
        uri := exchange.getRequestURI()
        paramters := g.parseQuery(uri.getQuery())
        file := paramters["file"]
        if file == null || file == "" {
            bs := byte[]("file not provide")
            exchange.sendResponseHeaders(400 , long(len(bs)))
            os.write(bs)
            return
        }
        bs := g.readBodyBytes(exchange.getRequestBody())
        if len(bs) == 0 {
            t , err := lucyos.readFile(file)
            if err != null {
                panic(err)
            }
            bs = javaArray2Lucy(t)
        }
        var tops = new []ast.TopNode(0)
        es := parser.parse(tops , "" , bs , false , 10 , -1 , -1 , -1 , -1)
        if len(es) > 0 {
            errmsg := ""
            for v := range es {
                errmsg += v.getMessage() + "\n"
            }

            bs := byte[](errmsg)
            exchange.sendResponseHeaders(400 , long(len(bs)))
            os.write(bs)
            return
        }
        {
            formator := new ideLib.Fmt()
            s := formator.fmt(tops)
            bs := byte[](s)
            header := exchange.getResponseHeaders()
            header.set("Content-Type" , "Content-Type: text/html; charset=utf-8")
            exchange.sendResponseHeaders(200 , long(len(bs)))
            os.write(bs)
        }

    }
}


