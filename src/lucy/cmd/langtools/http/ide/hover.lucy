// all rights reserved , check the LICENSE file

import "lucy/cmd/langtools/ide/hover"
import "com/sun/net/httpserver/HttpHandler"
import "com/sun/net/httpserver/HttpExchange"
import "lucy/cmd/langtools/http/g"
import "java/lang/Integer"
import "java/lang/System"

class GetHover implements HttpHandler {
	public fn handle(exchange HttpExchange) {
		os := exchange.getResponseBody()
		now := System.currentTimeMillis()
		defer {
			CallStatus.collect(callStatus , "hover" , System.currentTimeMillis() - now)
			e := catch()
			if e != null {
				exchange.sendResponseHeaders(500 , 0L)
				os.write(byte[]("internal error"))
				e.printStackTrace()
			}
			exchange.close()
		}

		bs := g.readBodyBytes(exchange.getRequestBody())
		uri := exchange.getRequestURI()
		parameters := g.parseQuery(uri.getQuery())
		file := parameters["file"]
		if file == null || file == "" {
			bs := byte[]("file not provide")
			exchange.sendResponseHeaders(400 , long(len(bs)))
			os.write(bs)
			return
		}
		line := Integer.parseInt(parameters["line"])
		column := Integer.parseInt(parameters["column"])
		s := hover.getHover(file , (line << 16) | int(char(column)) , bs)
		bs = []byte(s)
		header := exchange.getResponseHeaders()
		header.set("Content-Type" , "Content-Type: text/html; charset=utf-8")
		exchange.sendResponseHeaders(200 , long(len(bs)))
		os.write(copy(new byte[](len(bs)) , bs))
	}
}

