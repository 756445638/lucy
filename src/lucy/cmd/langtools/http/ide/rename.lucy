// all rights reserved , check the LICENSE file

import "lucy/cmd/langtools/ide/rename"
import "com/sun/net/httpserver/HttpHandler"
import "com/sun/net/httpserver/HttpExchange"
import "lucy/cmd/langtools/http/g"
import "java/lang/System"
import "java/lang/Integer"
import "lucy/cmd/langtools/common"

class Rename implements HttpHandler {
    public fn handle(exchange HttpExchange) {
        os := exchange.getResponseBody()
        now := System.currentTimeMillis()
        defer {
            CallStatus.collect(callStatus , "rename" , System.currentTimeMillis() - now)
            e := catch()
            if e != null {
                e.printStackTrace()
                exchange.sendResponseHeaders(500 , 0L)
                os.write(byte[]("internal error"))
            }
            exchange.close()
        }

        uri := exchange.getRequestURI()
        parameters := g.parseQuery(uri.getQuery())
        filename := parameters["filename"]
        if filename == null || filename == "" {
            bs := byte[]("filename not provide")
            exchange.sendResponseHeaders(400 , long(len(bs)))
            os.write(bs)
            return
        }
        to := parameters["to"]
        if to == null || to == "" {
            bs := byte[]("rename to not provide")
            exchange.sendResponseHeaders(400 , long(len(bs)))
            os.write(bs)
            return
        }
        if common.validIdentifier(to) == false {
            bs := byte[]("to is not a valid identifier")
            exchange.sendResponseHeaders(400 , long(len(bs)))
            os.write(bs)
            return
        }
        line := Integer.parseInt(parameters["line"])
        column := Integer.parseInt(parameters["column"])
        rename.renameFn(filename,
            g.readBodyBytes(exchange.getRequestBody()),
            to,
            line << 16 | int(char(column)))
        exchange.sendResponseHeaders(200 , 0L)
    }
}


