import "lucy/cmd/langtools/ide/outline"
import "lucy/cmd/langtools/ide"
import "com/sun/net/httpserver/HttpHandler"
import "com/sun/net/httpserver/HttpExchange"
import "lucy/cmd/langtools/http/g"
import "lucy/encoding/json"
import "java/lang/System"

class OutLine implements HttpHandler {
    public fn handle(exchange HttpExchange) {
        os := exchange.getResponseBody()
        now := System.currentTimeMillis()
        defer {
            CallStatus.collect(callStatus , "outline" , System.currentTimeMillis() - now)
            e := catch()
            if e != null {
                exchange.sendResponseHeaders(500 , 0L)
                os.write(byte[]("internal error"))
                e.printStackTrace()
            }
            exchange.close()
        }
        uri := exchange.getRequestURI()
        paramters := g.parseQuery(uri.getQuery())
        filename := paramters["filename"]
        if filename == null || filename == "" {
            bs := byte[]("dir not provide")
            exchange.sendResponseHeaders(400 , long(len(bs)))
            os.write(bs)
            return
        }
        definitions := outline.outLine(filename)
        t := copy(new ide.Definition[](len(definitions)) ,definitions )
        bs ,_ := json.encode(t , "\t")
        exchange.sendResponseHeaders(200 , long(len(bs)))
        os.write(copy(new byte[](len(bs)) ,bs))
    } 
}
