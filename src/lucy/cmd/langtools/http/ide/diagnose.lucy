// all rights reserved , check the LICENSE file

import "lucy/cmd/langtools/ide/diagnose"
import "com/sun/net/httpserver/HttpHandler"
import "com/sun/net/httpserver/HttpExchange"
import "lucy/cmd/langtools/http/g"
import "lucy/encoding/json"
import "java/lang/System"

class Diagnose implements HttpHandler {
    public fn handle(exchange HttpExchange) {
        os := exchange.getResponseBody()
        now := System.currentTimeMillis()
        defer {

            CallStatus.collect(callStatus , "diagnose" , System.currentTimeMillis() - now)
            e := catch()
            if e != null {
                exchange.sendResponseHeaders(500 , 0L)
                os.write(byte[]("internal error"))
                e.printStackTrace()
            }
            exchange.close()
        }

        uri := exchange.getRequestURI()
        parameters := g.parseQuery(uri.getQuery())
        file := parameters["file"]
        if file == null || file == "" {
            bs := byte[]("file not provide")
            exchange.sendResponseHeaders(400 , long(len(bs)))
            os.write(bs)
            return
        }
        diags := diagnose.diagnose(file , g.readBodyBytes(exchange.getRequestBody()))
        bs , _ := json.encode(diags , "\t")
        exchange.sendResponseHeaders(200 , long(len(bs)))
        os.write(copy(new byte[](len(bs)) , bs))
    }
}


