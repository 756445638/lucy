


public fn quickSort(s T, l int, r int,desc bool = false) {  
    if  l< r  && desc == false{        
        i ,j := l, r;
        x := s[l];  
        for  i < j {  
            for i < j && s[j]>= x { 
            	j--;
            } 
            if i < j {
            	s[i++] = s[j];  
            } 
            for i < j && s[i]< x{ 
            	i++;
            }   
            if i < j  {
                s[j--] = s[i];  
            }
        }  
        s[i] = x; 
        quickSort(s, l, i - 1,desc);  
        quickSort(s, i + 1, r,desc);  
    } 
    if  l< r  && desc {        
        i ,j := l, r;
        x := s[l];  
        for  i < j {  
            for i < j && s[j] < x { 
                j--;
            } 
            if i < j {
                s[i++] = s[j];  
            } 
            for i < j && s[i] >=  x{ 
                i++;
            }   
            if i < j  {
                s[j--] = s[i];  
            }
        }  
        s[i] = x; 
        quickSort(s, l, i - 1,desc); 
        quickSort(s, i + 1, r,desc);  
    } 
}









