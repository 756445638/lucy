// all rights reserved , check the LICENSE file

import "lucy/binary"
 

public class AttributeLucyFieldDescriptor {
	public descriptor       string
	public methodAccessFlag char

	public static fn fromBs(c Class, bs []byte)  -> (fd AttributeLucyFieldDescriptor){
		
		if len(bs) != 4 {
			panic("length is not 4")
		}
		descriptor := string(c.constPools[binary.BigEndian.getChar(bs[0:2])].info)
		methodAccessFlag := binary.BigEndian.getChar(bs[2:4])
		fd = new AttributeLucyFieldDescriptor(descriptor ,methodAccessFlag )
	}

	public fn AttributeLucyFieldDescriptor(Descriptor string , methodAccessFlag char){
		this.super()
		this.descriptor = Descriptor
		this.methodAccessFlag = methodAccessFlag
	}
	
	fn toAttributeInfo(c Class) -> (ret AttributeInfo)  {
		ret = new AttributeInfo()
		ret.nameIndex = c.insertUtf8Const(AttributeNameLucyFieldDescriptor)
		ret.info = new []byte(4)
		ret.attributeLength = 4
		binary.BigEndian.putChar(ret.info, c.insertUtf8Const(this.descriptor))
		binary.BigEndian.putChar(ret.info[2:], this.methodAccessFlag)
		return ret
	}
}


